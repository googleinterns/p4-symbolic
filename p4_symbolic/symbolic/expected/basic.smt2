; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(assert
 (let (($x119 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x119)))
(assert
 (let (($x66 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x72 (not $x66)))
 (let (($x76 (and $x72 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x60 (and true ipv4.$valid$)))
 (let (($x77 (and $x60 $x76)))
 (let (($x70 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x74 (and (and $x60 $x72) $x70)))
 (let ((?x92 (ite $x74 (concat (_ bv0 8) (_ bv1 1)) (ite $x77 (_ bv455 9) standard_metadata.egress_spec))))
 (let (($x71 (and $x60 $x66)))
 (let ((?x104 (ite $x71 (concat (_ bv0 8) (_ bv0 1)) ?x92)))
 (or (or (= ?x104 (_ bv455 9)) (= ?x104 (_ bv0 9))) (= ?x104 (_ bv1 9))))))))))))))
(assert
 (let (($x70 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x60 (and true ipv4.$valid$)))
 (let (($x66 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x71 (and $x60 $x66)))
 (let ((?x113 (ite ipv4.$valid$ (ite $x71 0 (ite (and $x60 $x70) 1 (- 1))) (- 1))))
 (let (($x112 (ite ipv4.$valid$ $x60 false)))
 (let (($x77 (and $x60 (and (not $x66) (not $x70)))))
 (let (($x74 (and (and $x60 (not $x66)) $x70)))
 (let ((?x92 (ite $x74 (concat (_ bv0 8) (_ bv1 1)) (ite $x77 (_ bv455 9) standard_metadata.egress_spec))))
 (let ((?x104 (ite $x71 (concat (_ bv0 8) (_ bv0 1)) ?x92)))
 (let (($x59 (= ?x104 (_ bv455 9))))
 (and (and (not $x59) $x112) (= ?x113 (- 1)))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(assert
 (let (($x119 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x119)))
(assert
 (let (($x66 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x72 (not $x66)))
 (let (($x76 (and $x72 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x60 (and true ipv4.$valid$)))
 (let (($x77 (and $x60 $x76)))
 (let (($x70 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x74 (and (and $x60 $x72) $x70)))
 (let ((?x92 (ite $x74 (concat (_ bv0 8) (_ bv1 1)) (ite $x77 (_ bv455 9) standard_metadata.egress_spec))))
 (let (($x71 (and $x60 $x66)))
 (let ((?x104 (ite $x71 (concat (_ bv0 8) (_ bv0 1)) ?x92)))
 (or (or (= ?x104 (_ bv455 9)) (= ?x104 (_ bv0 9))) (= ?x104 (_ bv1 9))))))))))))))
(assert
 (let (($x70 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x60 (and true ipv4.$valid$)))
 (let (($x66 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x71 (and $x60 $x66)))
 (let ((?x113 (ite ipv4.$valid$ (ite $x71 0 (ite (and $x60 $x70) 1 (- 1))) (- 1))))
 (let (($x112 (ite ipv4.$valid$ $x60 false)))
 (let (($x77 (and $x60 (and (not $x66) (not $x70)))))
 (let (($x74 (and (and $x60 (not $x66)) $x70)))
 (let ((?x92 (ite $x74 (concat (_ bv0 8) (_ bv1 1)) (ite $x77 (_ bv455 9) standard_metadata.egress_spec))))
 (let ((?x104 (ite $x71 (concat (_ bv0 8) (_ bv0 1)) ?x92)))
 (let (($x59 (= ?x104 (_ bv455 9))))
 (let (($x215 (and (not $x59) $x112)))
 (and $x215 (= ?x113 0)))))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(declare-fun ipv4.dstAddr () (_ BitVec 32))
(declare-fun ipv4.$valid$ () Bool)
(assert
 (let (($x119 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x119)))
(assert
 (let (($x66 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x72 (not $x66)))
 (let (($x76 (and $x72 (not (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))))
 (let (($x60 (and true ipv4.$valid$)))
 (let (($x77 (and $x60 $x76)))
 (let (($x70 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x74 (and (and $x60 $x72) $x70)))
 (let ((?x92 (ite $x74 (concat (_ bv0 8) (_ bv1 1)) (ite $x77 (_ bv455 9) standard_metadata.egress_spec))))
 (let (($x71 (and $x60 $x66)))
 (let ((?x104 (ite $x71 (concat (_ bv0 8) (_ bv0 1)) ?x92)))
 (or (or (= ?x104 (_ bv455 9)) (= ?x104 (_ bv0 9))) (= ?x104 (_ bv1 9))))))))))))))
(assert
 (let (($x70 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv336855040 32))))))
 (let (($x60 (and true ipv4.$valid$)))
 (let (($x66 (and true (= ((_ extract 31 16) ipv4.dstAddr) ((_ extract 31 16) (_ bv168427520 32))))))
 (let (($x71 (and $x60 $x66)))
 (let ((?x113 (ite ipv4.$valid$ (ite $x71 0 (ite (and $x60 $x70) 1 (- 1))) (- 1))))
 (let (($x112 (ite ipv4.$valid$ $x60 false)))
 (let (($x77 (and $x60 (and (not $x66) (not $x70)))))
 (let (($x74 (and (and $x60 (not $x66)) $x70)))
 (let ((?x92 (ite $x74 (concat (_ bv0 8) (_ bv1 1)) (ite $x77 (_ bv455 9) standard_metadata.egress_spec))))
 (let ((?x104 (ite $x71 (concat (_ bv0 8) (_ bv0 1)) ?x92)))
 (let (($x59 (= ?x104 (_ bv455 9))))
 (and (and (not $x59) $x112) (= ?x113 1))))))))))))))
(check-sat)

