; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(assert
 (let (($x71 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x71)))
(assert
 (let ((?x44 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x50 (and true (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv1 1))))))
 (let (($x53 (and true (not (and true (= standard_metadata.ingress_port ?x44))))))
 (let ((?x48 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x46 (and true (= standard_metadata.ingress_port ?x44))))
 (let (($x51 (and true $x46)))
 (let ((?x65 (ite $x51 ?x48 (ite (and $x53 $x50) ?x44 standard_metadata.egress_spec))))
 (or (or (= ?x65 (_ bv455 9)) (= ?x65 (_ bv0 9))) (= ?x65 (_ bv1 9)))))))))))
(assert
 (let (($x50 (and true (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv1 1))))))
 (let (($x46 (and true (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1))))))
 (let (($x51 (and true $x46)))
 (let ((?x64 (ite $x51 0 (ite (and true $x50) 1 (- 1)))))
 (let ((?x44 (concat (_ bv0 8) (_ bv0 1))))
 (let ((?x62 (ite (and (and true (not $x46)) $x50) ?x44 standard_metadata.egress_spec)))
 (let ((?x48 (concat (_ bv0 8) (_ bv1 1))))
 (let ((?x65 (ite $x51 ?x48 ?x62)))
 (let (($x56 (= ?x65 (_ bv455 9))))
 (and (and (not $x56) true) (= ?x64 (- 1)))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(assert
 (let (($x71 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x71)))
(assert
 (let ((?x44 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x50 (and true (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv1 1))))))
 (let (($x53 (and true (not (and true (= standard_metadata.ingress_port ?x44))))))
 (let ((?x48 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x46 (and true (= standard_metadata.ingress_port ?x44))))
 (let (($x51 (and true $x46)))
 (let ((?x65 (ite $x51 ?x48 (ite (and $x53 $x50) ?x44 standard_metadata.egress_spec))))
 (or (or (= ?x65 (_ bv455 9)) (= ?x65 (_ bv0 9))) (= ?x65 (_ bv1 9)))))))))))
(assert
 (let (($x50 (and true (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv1 1))))))
 (let (($x46 (and true (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1))))))
 (let (($x51 (and true $x46)))
 (let ((?x64 (ite $x51 0 (ite (and true $x50) 1 (- 1)))))
 (let ((?x44 (concat (_ bv0 8) (_ bv0 1))))
 (let ((?x62 (ite (and (and true (not $x46)) $x50) ?x44 standard_metadata.egress_spec)))
 (let ((?x48 (concat (_ bv0 8) (_ bv1 1))))
 (let ((?x65 (ite $x51 ?x48 ?x62)))
 (let (($x56 (= ?x65 (_ bv455 9))))
 (let (($x124 (and (not $x56) true)))
 (and $x124 (= ?x64 0)))))))))))))
(check-sat)

; 
(set-info :status unknown)
(declare-fun standard_metadata.ingress_port () (_ BitVec 9))
(declare-fun standard_metadata.egress_spec () (_ BitVec 9))
(assert
 (let (($x71 (= standard_metadata.ingress_port (_ bv1 9))))
 (or (or false (= standard_metadata.ingress_port (_ bv0 9))) $x71)))
(assert
 (let ((?x44 (concat (_ bv0 8) (_ bv0 1))))
 (let (($x50 (and true (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv1 1))))))
 (let (($x53 (and true (not (and true (= standard_metadata.ingress_port ?x44))))))
 (let ((?x48 (concat (_ bv0 8) (_ bv1 1))))
 (let (($x46 (and true (= standard_metadata.ingress_port ?x44))))
 (let (($x51 (and true $x46)))
 (let ((?x65 (ite $x51 ?x48 (ite (and $x53 $x50) ?x44 standard_metadata.egress_spec))))
 (or (or (= ?x65 (_ bv455 9)) (= ?x65 (_ bv0 9))) (= ?x65 (_ bv1 9)))))))))))
(assert
 (let (($x50 (and true (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv1 1))))))
 (let (($x46 (and true (= standard_metadata.ingress_port (concat (_ bv0 8) (_ bv0 1))))))
 (let (($x51 (and true $x46)))
 (let ((?x64 (ite $x51 0 (ite (and true $x50) 1 (- 1)))))
 (let ((?x44 (concat (_ bv0 8) (_ bv0 1))))
 (let ((?x62 (ite (and (and true (not $x46)) $x50) ?x44 standard_metadata.egress_spec)))
 (let ((?x48 (concat (_ bv0 8) (_ bv1 1))))
 (let ((?x65 (ite $x51 ?x48 ?x62)))
 (let (($x56 (= ?x65 (_ bv455 9))))
 (and (and (not $x56) true) (= ?x64 1))))))))))))
(check-sat)

