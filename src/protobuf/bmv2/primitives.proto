// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file contains some general primitives that are used in various places
// in the p4 bmv2 JSON format.

syntax = "proto3";

// A value/expression is a struct.
// It contains a type, which can be one of:
// field, hexstr, regular, runtime_data, header, expression, op, or assign.
// It also contains a value, which can be one of these option respectively
// according to its type:
// array, string, string, int, string, nested expression, 
// struct containing op, left, and right, 
// or an expression with no value and only parameters.

// Describes the definition of a variable or action parameter.
message VariableDefinition {
  // Programmer defined name of the variable.
  string name = 1;
  // The bitwidth (representing the type).
  int32 bitwidth = 2;
}

// Contains source code information about the location
// in the source where the relevant construct was defined.
message SourceLocation {
  string filename = 1;
  int32 line = 2;
  int32 column = 3;
  // If the direct parent of this construct (where the construct was parsed)
  // has a name (e.g. it is a pipeline or a parser), this will be the name
  // of that parent.
  // Otherwise, this will be the actual code fragment that was parsed
  // into the attached construct (e.g. in the case of a nested expression).
  string source_fragment = 4;
}
